<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zktx.platform.dao.tb.TableSchemaMapper">
  <resultMap id="BaseResultMap" type="com.zktx.platform.entity.tb.TableSchema">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="table_id" jdbcType="INTEGER" property="table_id" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zktx.platform.entity.tb.TableSchema">
    <result column="schema" jdbcType="LONGVARCHAR" property="schema" />
  </resultMap>
  <sql id="Base_Column_List">
    id, table_id, version, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    schema
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_table_schema
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByImportTableId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
  	 select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
  	from tb_table_schema 
  	where table_id = #{table_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_table_schema
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zktx.platform.entity.tb.TableSchema">
    insert into tb_table_schema (id, table_id, version, 
      create_time, update_time, schema
      )
    values (#{id,jdbcType=INTEGER}, #{table_id,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, 
      #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, #{schema,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zktx.platform.entity.tb.TableSchema">
    insert into tb_table_schema
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="table_id != null">
        table_id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="schema != null">
        schema,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="table_id != null">
        #{table_id,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="schema != null">
        #{schema,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zktx.platform.entity.tb.TableSchema">
    update tb_table_schema
    <set>
      <if test="table_id != null">
        table_id = #{table_id,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="schema != null">
        schema = #{schema,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zktx.platform.entity.tb.TableSchema">
    update tb_table_schema
    set table_id = #{table_id,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      schema = #{schema,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zktx.platform.entity.tb.TableSchema">
    update tb_table_schema
    set table_id = #{table_id,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>